
AVRASM ver. 2.1.30  C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm Sun Dec 27 23:39:59 2020

C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1088): warning: Register r4 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1089): warning: Register r5 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1090): warning: Register r6 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1091): warning: Register r7 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1092): warning: Register r8 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1093): warning: Register r9 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1094): warning: Register r10 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1095): warning: Register r11 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1096): warning: Register r13 already defined by the .DEF directive
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1097): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : long, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _start=R4
                 	.DEF _start_msb=R5
                 	.DEF _start2=R6
                 	.DEF _start2_msb=R7
                 	.DEF _end=R8
                 	.DEF _end_msb=R9
                 	.DEF _period=R10
                 	.DEF _period_msb=R11
                 	.DEF __lcd_x=R13
                 	.DEF __lcd_y=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003e 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 7246
00002b 7165
00002c 203a
00002d 6425      	.DB  0x46,0x72,0x65,0x71,0x3A,0x20,0x25,0x64
00002e 4820
00002f 007a
000030 6157
000031 7469      	.DB  0x20,0x48,0x7A,0x0,0x57,0x61,0x69,0x74
000032 6e69
000033 2e67
000034 2e2e
C:\Users\mhatefi 1\Downloads\MicroprocessorLab-main\MicroprocessorLab-main\Task 3\Q3\Code\Debug\List\Q3.asm(1131): warning: .cseg .db misalignment - padding zero byte
000035 0000      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0x2E,0x0
                 _0x2000003:
000036 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000037 000b      	.DW  0x0B
000038 0160      	.DW  _0x11
000039 0060      	.DW  _0x0*2+12
                 
00003a 0002      	.DW  0x02
00003b 017f      	.DW  __base_y_G100
00003c 006c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00003d 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003e 94f8      	CLI
00003f 27ee      	CLR  R30
000040 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000041 e0f1      	LDI  R31,1
000042 bffb      	OUT  GICR,R31
000043 bfeb      	OUT  GICR,R30
000044 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000045 e08d      	LDI  R24,(14-2)+1
000046 e0a2      	LDI  R26,2
000047 27bb      	CLR  R27
                 __CLEAR_REG:
000048 93ed      	ST   X+,R30
000049 958a      	DEC  R24
00004a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004c e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004e 93ed      	ST   X+,R30
00004f 9701      	SBIW R24,1
000050 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000051 e6ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000052 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000053 9185      	LPM  R24,Z+
000054 9195      	LPM  R25,Z+
000055 9700      	SBIW R24,0
000056 f061      	BREQ __GLOBAL_INI_END
000057 91a5      	LPM  R26,Z+
000058 91b5      	LPM  R27,Z+
000059 9005      	LPM  R0,Z+
00005a 9015      	LPM  R1,Z+
00005b 01bf      	MOVW R22,R30
00005c 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005d 9005      	LPM  R0,Z+
00005e 920d      	ST   X+,R0
00005f 9701      	SBIW R24,1
000060 f7e1      	BRNE __GLOBAL_INI_LOOP
000061 01fb      	MOVW R30,R22
000062 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000063 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000064 bfed      	OUT  SPL,R30
000065 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000066 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000067 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000068 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000069 940c 006b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;#define ICR1 256 * ICR1H + ICR1L;
                 ;
                 ;unsigned int start;
                 ;unsigned int start2;
                 ;unsigned int end;
                 ;
                 ;char frequency[16];
                 ;
                 ;unsigned int period;
                 ;long freq;
                 ;
                 ;void main(void)
                 ; 0000 0012 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0013     lcd_init(20);
00006b e1a4      	LDI  R26,LOW(20)
00006c d0c5      	RCALL _lcd_init
                 ; 0000 0014     DDRA =0xFF;
00006d efef      	LDI  R30,LOW(255)
00006e bbea      	OUT  0x1A,R30
                 ; 0000 0015     PORTA = 0x00;
00006f e0e0      	LDI  R30,LOW(0)
000070 bbeb      	OUT  0x1B,R30
                 ; 0000 0016 
                 ; 0000 0017     while(1)
                 _0x3:
                 ; 0000 0018     {
                 ; 0000 0019         TCCR1A = 0;
000071 e0e0      	LDI  R30,LOW(0)
000072 bdef      	OUT  0x2F,R30
                 ; 0000 001A         TCNT1=0;
000073 e0e0      	LDI  R30,LOW(0)
000074 e0f0      	LDI  R31,HIGH(0)
000075 bdfd      	OUT  0x2C+1,R31
000076 bdec      	OUT  0x2C,R30
                 ; 0000 001B         TIFR = (1<<ICF1);
000077 e2e0      	LDI  R30,LOW(32)
000078 bfe8      	OUT  0x38,R30
                 ; 0000 001C 
                 ; 0000 001D         TCCR1B = 0x41;
000079 e4e1      	LDI  R30,LOW(65)
00007a bdee      	OUT  0x2E,R30
                 ; 0000 001E         while ((TIFR&(1<<ICF1)) == 0);
                 _0x6:
00007b b7e8      	IN   R30,0x38
00007c ffe5      	SBRS R30,5
00007d cffd      	RJMP _0x6
                 ; 0000 001F         start = ICR1;
00007e 940e 036f 	CALL SUBOPT_0x0
000080 012f      	MOVW R4,R30
                 ; 0000 0020         TIFR = (1<<ICF1);
000081 e2e0      	LDI  R30,LOW(32)
000082 bfe8      	OUT  0x38,R30
                 ; 0000 0021 
                 ; 0000 0022         TCCR1B = 0x01;
000083 e0e1      	LDI  R30,LOW(1)
000084 bdee      	OUT  0x2E,R30
                 ; 0000 0023         while ((TIFR&(1<<ICF1)) == 0);
                 _0x9:
000085 b7e8      	IN   R30,0x38
000086 ffe5      	SBRS R30,5
000087 cffd      	RJMP _0x9
                 ; 0000 0024         start2 = ICR1;
000088 940e 036f 	CALL SUBOPT_0x0
00008a 013f      	MOVW R6,R30
                 ; 0000 0025         TIFR = (1<<ICF1);
00008b e2e0      	LDI  R30,LOW(32)
00008c bfe8      	OUT  0x38,R30
                 ; 0000 0026 
                 ; 0000 0027         TCCR1B = 0x41;
00008d e4e1      	LDI  R30,LOW(65)
00008e bdee      	OUT  0x2E,R30
                 ; 0000 0028         while ((TIFR&(1<<ICF1)) == 0);
                 _0xC:
00008f b7e8      	IN   R30,0x38
000090 ffe5      	SBRS R30,5
000091 cffd      	RJMP _0xC
                 ; 0000 0029         end = ICR1;
000092 940e 036f 	CALL SUBOPT_0x0
000094 014f      	MOVW R8,R30
                 ; 0000 002A         TIFR = (1<<ICF1);
000095 e2e0      	LDI  R30,LOW(32)
000096 bfe8      	OUT  0x38,R30
                 ; 0000 002B 
                 ; 0000 002C         TCCR1B = 0;
000097 e0e0      	LDI  R30,LOW(0)
000098 bdee      	OUT  0x2E,R30
                 ; 0000 002D 
                 ; 0000 002E 		if(start < end)
                +
000099 1448     +CP R4 , R8
00009a 0459     +CPC R5 , R9
                 	__CPWRR 4,5,8,9
00009b f560      	BRSH _0xF
                 ; 0000 002F 		{
                 ; 0000 0030 			period = end - start;
00009c 01f4      	MOVW R30,R8
00009d 19e4      	SUB  R30,R4
00009e 09f5      	SBC  R31,R5
00009f 015f      	MOVW R10,R30
                 ; 0000 0031 
                 ; 0000 0032 			freq= 8000000UL/period;
0000a0 2766      	CLR  R22
0000a1 2777      	CLR  R23
                +
0000a2 e0a0     +LDI R26 , LOW ( 0x7A1200 )
0000a3 e1b2     +LDI R27 , HIGH ( 0x7A1200 )
0000a4 e78a     +LDI R24 , BYTE3 ( 0x7A1200 )
0000a5 e090     +LDI R25 , BYTE4 ( 0x7A1200 )
                 	__GETD2N 0x7A1200
0000a6 940e 03d3 	CALL __DIVD21U
0000a8 93e0 017b 	STS  _freq,R30
0000aa 93f0 017c 	STS  _freq+1,R31
0000ac 9360 017d 	STS  _freq+2,R22
0000ae 9370 017e 	STS  _freq+3,R23
                 ; 0000 0033             sprintf(frequency,"Freq: %d Hz", (int)freq);
0000b0 e6eb      	LDI  R30,LOW(_frequency)
0000b1 e0f1      	LDI  R31,HIGH(_frequency)
0000b2 93fa      	ST   -Y,R31
0000b3 93ea      	ST   -Y,R30
                +
0000b4 e5e4     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000b5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000b6 93fa      	ST   -Y,R31
0000b7 93ea      	ST   -Y,R30
0000b8 91e0 017b 	LDS  R30,_freq
0000ba 91f0 017c 	LDS  R31,_freq+1
0000bc 940e 03ce 	CALL __CWD1
0000be 940e 0406 	CALL __PUTPARD1
0000c0 e084      	LDI  R24,4
0000c1 940e 0322 	CALL _sprintf
0000c3 9628      	ADIW R28,8
                 ; 0000 0034 
                 ; 0000 0035             lcd_clear();
0000c4 d039      	RCALL _lcd_clear
                 ; 0000 0036 			lcd_puts(frequency);
0000c5 e6ab      	LDI  R26,LOW(_frequency)
0000c6 e0b1      	LDI  R27,HIGH(_frequency)
0000c7 c002      	RJMP _0x13
                 ; 0000 0037 		}else lcd_puts("Waiting...");
                 _0xF:
                +
0000c8 e6a0     +LDI R26 , LOW ( _0x11 + ( 0 ) )
0000c9 e0b1     +LDI R27 , HIGH ( _0x11 + ( 0 ) )
                 	__POINTW2MN _0x11,0
                 _0x13:
0000ca d056      	RCALL _lcd_puts
                 ; 0000 0038 
                 ; 0000 0039         delay_ms(100);
0000cb e6a4      	LDI  R26,LOW(100)
0000cc e0b0      	LDI  R27,0
0000cd 940e 03b8 	CALL _delay_ms
                 ; 0000 003A 	}
0000cf cfa1      	RJMP _0x3
                 ; 0000 003B }
                 _0x12:
0000d0 cfff      	RJMP _0x12
                 ; .FEND
                 
                 	.DSEG
                 _0x11:
000160           	.BYTE 0xB
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000d1 93aa      	ST   -Y,R26
0000d2 b3eb      	IN   R30,0x1B
0000d3 70ef      	ANDI R30,LOW(0xF)
0000d4 2fae      	MOV  R26,R30
0000d5 81e8      	LD   R30,Y
0000d6 7fe0      	ANDI R30,LOW(0xF0)
0000d7 2bea      	OR   R30,R26
0000d8 bbeb      	OUT  0x1B,R30
                +
0000d9 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000da 958a     +DEC R24
0000db f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000dc 9ada      	SBI  0x1B,2
                +
0000dd e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000de 958a     +DEC R24
0000df f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e0 98da      	CBI  0x1B,2
                +
0000e1 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000e2 958a     +DEC R24
0000e3 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000e4 c07a      	RJMP _0x2080002
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000e5 93aa      	ST   -Y,R26
0000e6 81a8      	LD   R26,Y
0000e7 dfe9      	RCALL __lcd_write_nibble_G100
0000e8 81e8          ld    r30,y
0000e9 95e2          swap  r30
0000ea 83e8          st    y,r30
0000eb 81a8      	LD   R26,Y
0000ec dfe4      	RCALL __lcd_write_nibble_G100
                +
0000ed e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000ee 958a     +DEC R24
0000ef f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000f0 c06e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000f1 93aa      	ST   -Y,R26
0000f2 81e8      	LD   R30,Y
0000f3 e0f0      	LDI  R31,0
0000f4 58e1      	SUBI R30,LOW(-__base_y_G100)
0000f5 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000f6 81e0      	LD   R30,Z
0000f7 81a9      	LDD  R26,Y+1
0000f8 0fae      	ADD  R26,R30
0000f9 dfeb      	RCALL __lcd_write_data
0000fa 80d9      	LDD  R13,Y+1
0000fb 80c8      	LDD  R12,Y+0
0000fc 9622      	ADIW R28,2
0000fd 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000fe e0a2      	LDI  R26,LOW(2)
0000ff 940e 0378 	CALL SUBOPT_0x1
000101 e0ac      	LDI  R26,LOW(12)
000102 dfe2      	RCALL __lcd_write_data
000103 e0a1      	LDI  R26,LOW(1)
000104 940e 0378 	CALL SUBOPT_0x1
000106 e0e0      	LDI  R30,LOW(0)
000107 2ece      	MOV  R12,R30
000108 2ede      	MOV  R13,R30
000109 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00010a 93aa      	ST   -Y,R26
00010b 81a8      	LD   R26,Y
00010c 30aa      	CPI  R26,LOW(0xA)
00010d f021      	BREQ _0x2000005
00010e 91e0 0183 	LDS  R30,__lcd_maxx
000110 16de      	CP   R13,R30
000111 f048      	BRLO _0x2000004
                 _0x2000005:
000112 e0e0      	LDI  R30,LOW(0)
000113 93ea      	ST   -Y,R30
000114 94c3      	INC  R12
000115 2dac      	MOV  R26,R12
000116 dfda      	RCALL _lcd_gotoxy
000117 81a8      	LD   R26,Y
000118 30aa      	CPI  R26,LOW(0xA)
000119 f409      	BRNE _0x2000007
00011a c044      	RJMP _0x2080002
                 _0x2000007:
                 _0x2000004:
00011b 94d3      	INC  R13
00011c 9ad8      	SBI  0x1B,0
00011d 81a8      	LD   R26,Y
00011e dfc6      	RCALL __lcd_write_data
00011f 98d8      	CBI  0x1B,0
000120 c03e      	RJMP _0x2080002
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000121 93ba      	ST   -Y,R27
000122 93aa      	ST   -Y,R26
000123 931a      	ST   -Y,R17
                 _0x2000008:
000124 81a9      	LDD  R26,Y+1
000125 81ba      	LDD  R27,Y+1+1
000126 91ed      	LD   R30,X+
000127 83a9      	STD  Y+1,R26
000128 83ba      	STD  Y+1+1,R27
000129 2f1e      	MOV  R17,R30
00012a 30e0      	CPI  R30,0
00012b f019      	BREQ _0x200000A
00012c 2fa1      	MOV  R26,R17
00012d dfdc      	RCALL _lcd_putchar
00012e cff5      	RJMP _0x2000008
                 _0x200000A:
00012f 8118      	LDD  R17,Y+0
000130 9623      	ADIW R28,3
000131 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000132 93aa      	ST   -Y,R26
000133 b3ea      	IN   R30,0x1A
000134 6fe0      	ORI  R30,LOW(0xF0)
000135 bbea      	OUT  0x1A,R30
000136 9ad2      	SBI  0x1A,2
000137 9ad0      	SBI  0x1A,0
000138 9ad1      	SBI  0x1A,1
000139 98da      	CBI  0x1B,2
00013a 98d8      	CBI  0x1B,0
00013b 98d9      	CBI  0x1B,1
00013c 81e8      	LD   R30,Y
00013d 93e0 0183 	STS  __lcd_maxx,R30
00013f 58e0      	SUBI R30,-LOW(128)
                +
000140 93e0 0181+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000142 81e8      	LD   R30,Y
000143 54e0      	SUBI R30,-LOW(192)
                +
000144 93e0 0182+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000146 e1a4      	LDI  R26,LOW(20)
000147 e0b0      	LDI  R27,0
000148 940e 03b8 	CALL _delay_ms
00014a 940e 037e 	CALL SUBOPT_0x2
00014c 940e 037e 	CALL SUBOPT_0x2
00014e 940e 037e 	CALL SUBOPT_0x2
000150 e2a0      	LDI  R26,LOW(32)
000151 df7f      	RCALL __lcd_write_nibble_G100
                +
000152 ec88     +LDI R24 , LOW ( 200 )
000153 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000154 9701     +SBIW R24 , 1
000155 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000156 e2a8      	LDI  R26,LOW(40)
000157 df8d      	RCALL __lcd_write_data
000158 e0a4      	LDI  R26,LOW(4)
000159 df8b      	RCALL __lcd_write_data
00015a e8a5      	LDI  R26,LOW(133)
00015b df89      	RCALL __lcd_write_data
00015c e0a6      	LDI  R26,LOW(6)
00015d df87      	RCALL __lcd_write_data
00015e df9f      	RCALL _lcd_clear
                 _0x2080002:
00015f 9621      	ADIW R28,1
000160 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000161 93ba      	ST   -Y,R27
000162 93aa      	ST   -Y,R26
000163 931a      	ST   -Y,R17
000164 930a      	ST   -Y,R16
000165 81aa      	LDD  R26,Y+2
000166 81bb      	LDD  R27,Y+2+1
000167 9612      	ADIW R26,2
000168 940e 03fc 	CALL __GETW1P
00016a 9730      	SBIW R30,0
00016b f159      	BREQ _0x2020010
00016c 81aa      	LDD  R26,Y+2
00016d 81bb      	LDD  R27,Y+2+1
00016e 9614      	ADIW R26,4
00016f 940e 03fc 	CALL __GETW1P
000171 018f      	MOVW R16,R30
000172 9730      	SBIW R30,0
000173 f061      	BREQ _0x2020012
                +
000174 3002     +CPI R16 , LOW ( 2 )
000175 e0e0     +LDI R30 , HIGH ( 2 )
000176 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000177 f098      	BRLO _0x2020013
000178 01f8      	MOVW R30,R16
000179 9731      	SBIW R30,1
00017a 018f      	MOVW R16,R30
                +
00017b 81aa     +LDD R26 , Y + 2
00017c 81bb     +LDD R27 , Y + 2 + 1
00017d 9614     +ADIW R26 , 4
00017e 93ed     +ST X + , R30
00017f 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
000180 81aa      	LDD  R26,Y+2
000181 81bb      	LDD  R27,Y+2+1
000182 9612      	ADIW R26,2
000183 91ed      	LD   R30,X+
000184 91fd      	LD   R31,X+
000185 9631      	ADIW R30,1
000186 93fe      	ST   -X,R31
000187 93ee      	ST   -X,R30
000188 9731      	SBIW R30,1
000189 81ac      	LDD  R26,Y+4
00018a 83a0      	STD  Z+0,R26
                 _0x2020013:
00018b 81aa      	LDD  R26,Y+2
00018c 81bb      	LDD  R27,Y+2+1
00018d 940e 03fc 	CALL __GETW1P
00018f 23ff      	TST  R31
000190 f02a      	BRMI _0x2020014
000191 91ed      	LD   R30,X+
000192 91fd      	LD   R31,X+
000193 9631      	ADIW R30,1
000194 93fe      	ST   -X,R31
000195 93ee      	ST   -X,R30
                 _0x2020014:
000196 c006      	RJMP _0x2020015
                 _0x2020010:
000197 81aa      	LDD  R26,Y+2
000198 81bb      	LDD  R27,Y+2+1
000199 efef      	LDI  R30,LOW(65535)
00019a efff      	LDI  R31,HIGH(65535)
00019b 93ed      	ST   X+,R30
00019c 93fc      	ST   X,R31
                 _0x2020015:
00019d 8119      	LDD  R17,Y+1
00019e 8108      	LDD  R16,Y+0
00019f 9625      	ADIW R28,5
0001a0 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0001a1 93ba      	ST   -Y,R27
0001a2 93aa      	ST   -Y,R26
0001a3 972b      	SBIW R28,11
0001a4 940e 040f 	CALL __SAVELOCR6
0001a6 e010      	LDI  R17,0
0001a7 89a9      	LDD  R26,Y+17
0001a8 89ba      	LDD  R27,Y+17+1
0001a9 e0e0      	LDI  R30,LOW(0)
0001aa e0f0      	LDI  R31,HIGH(0)
0001ab 93ed      	ST   X+,R30
0001ac 93fc      	ST   X,R31
                 _0x2020016:
0001ad 89ef      	LDD  R30,Y+23
0001ae 8df8      	LDD  R31,Y+23+1
0001af 9631      	ADIW R30,1
0001b0 8bef      	STD  Y+23,R30
0001b1 8ff8      	STD  Y+23+1,R31
0001b2 9731      	SBIW R30,1
0001b3 91e4      	LPM  R30,Z
0001b4 2f2e      	MOV  R18,R30
0001b5 30e0      	CPI  R30,0
0001b6 f409      	BRNE PC+2
0001b7 c162      	RJMP _0x2020018
0001b8 2fe1      	MOV  R30,R17
0001b9 30e0      	CPI  R30,0
0001ba f439      	BRNE _0x202001C
0001bb 3225      	CPI  R18,37
0001bc f411      	BRNE _0x202001D
0001bd e011      	LDI  R17,LOW(1)
0001be c002      	RJMP _0x202001E
                 _0x202001D:
0001bf 940e 0386 	CALL SUBOPT_0x3
                 _0x202001E:
0001c1 c157      	RJMP _0x202001B
                 _0x202001C:
0001c2 30e1      	CPI  R30,LOW(0x1)
0001c3 f4a9      	BRNE _0x202001F
0001c4 3225      	CPI  R18,37
0001c5 f419      	BRNE _0x2020020
0001c6 940e 0386 	CALL SUBOPT_0x3
0001c8 c14f      	RJMP _0x20200D2
                 _0x2020020:
0001c9 e012      	LDI  R17,LOW(2)
0001ca e040      	LDI  R20,LOW(0)
0001cb e000      	LDI  R16,LOW(0)
0001cc 322d      	CPI  R18,45
0001cd f411      	BRNE _0x2020021
0001ce e001      	LDI  R16,LOW(1)
0001cf c149      	RJMP _0x202001B
                 _0x2020021:
0001d0 322b      	CPI  R18,43
0001d1 f411      	BRNE _0x2020022
0001d2 e24b      	LDI  R20,LOW(43)
0001d3 c145      	RJMP _0x202001B
                 _0x2020022:
0001d4 3220      	CPI  R18,32
0001d5 f411      	BRNE _0x2020023
0001d6 e240      	LDI  R20,LOW(32)
0001d7 c141      	RJMP _0x202001B
                 _0x2020023:
0001d8 c002      	RJMP _0x2020024
                 _0x202001F:
0001d9 30e2      	CPI  R30,LOW(0x2)
0001da f439      	BRNE _0x2020025
                 _0x2020024:
0001db e050      	LDI  R21,LOW(0)
0001dc e013      	LDI  R17,LOW(3)
0001dd 3320      	CPI  R18,48
0001de f411      	BRNE _0x2020026
0001df 6800      	ORI  R16,LOW(128)
0001e0 c138      	RJMP _0x202001B
                 _0x2020026:
0001e1 c002      	RJMP _0x2020027
                 _0x2020025:
0001e2 30e3      	CPI  R30,LOW(0x3)
0001e3 f491      	BRNE _0x2020028
                 _0x2020027:
0001e4 3320      	CPI  R18,48
0001e5 f010      	BRLO _0x202002A
0001e6 332a      	CPI  R18,58
0001e7 f008      	BRLO _0x202002B
                 _0x202002A:
0001e8 c007      	RJMP _0x2020029
                 _0x202002B:
0001e9 e0aa      	LDI  R26,LOW(10)
0001ea 9f5a      	MUL  R21,R26
0001eb 2d50      	MOV  R21,R0
0001ec 2fe2      	MOV  R30,R18
0001ed 53e0      	SUBI R30,LOW(48)
0001ee 0f5e      	ADD  R21,R30
0001ef c129      	RJMP _0x202001B
                 _0x2020029:
0001f0 362c      	CPI  R18,108
0001f1 f419      	BRNE _0x202002C
0001f2 6002      	ORI  R16,LOW(2)
0001f3 e015      	LDI  R17,LOW(5)
0001f4 c124      	RJMP _0x202001B
                 _0x202002C:
0001f5 c003      	RJMP _0x202002D
                 _0x2020028:
0001f6 30e5      	CPI  R30,LOW(0x5)
0001f7 f009      	BREQ PC+2
0001f8 c120      	RJMP _0x202001B
                 _0x202002D:
0001f9 2fe2      	MOV  R30,R18
0001fa 36e3      	CPI  R30,LOW(0x63)
0001fb f449      	BRNE _0x2020032
0001fc 940e 038d 	CALL SUBOPT_0x4
0001fe 89ed      	LDD  R30,Y+21
0001ff 89fe      	LDD  R31,Y+21+1
000200 81a4      	LDD  R26,Z+4
000201 93aa      	ST   -Y,R26
000202 940e 0393 	CALL SUBOPT_0x5
000204 c113      	RJMP _0x2020033
                 _0x2020032:
000205 37e3      	CPI  R30,LOW(0x73)
000206 f441      	BRNE _0x2020035
000207 940e 038d 	CALL SUBOPT_0x4
000209 940e 0399 	CALL SUBOPT_0x6
00020b 940e 0356 	CALL _strlen
00020d 2f1e      	MOV  R17,R30
00020e c00a      	RJMP _0x2020036
                 _0x2020035:
00020f 37e0      	CPI  R30,LOW(0x70)
000210 f469      	BRNE _0x2020038
000211 940e 038d 	CALL SUBOPT_0x4
000213 940e 0399 	CALL SUBOPT_0x6
000215 940e 0362 	CALL _strlenf
000217 2f1e      	MOV  R17,R30
000218 6008      	ORI  R16,LOW(8)
                 _0x2020036:
000219 770f      	ANDI R16,LOW(127)
00021a e0e0      	LDI  R30,LOW(0)
00021b 8be8      	STD  Y+16,R30
00021c e030      	LDI  R19,LOW(0)
00021d c06e      	RJMP _0x2020039
                 _0x2020038:
00021e 36e4      	CPI  R30,LOW(0x64)
00021f f011      	BREQ _0x202003C
000220 36e9      	CPI  R30,LOW(0x69)
000221 f411      	BRNE _0x202003D
                 _0x202003C:
000222 6004      	ORI  R16,LOW(4)
000223 c002      	RJMP _0x202003E
                 _0x202003D:
000224 37e5      	CPI  R30,LOW(0x75)
000225 f4a1      	BRNE _0x202003F
                 _0x202003E:
000226 e0ea      	LDI  R30,LOW(10)
000227 8be8      	STD  Y+16,R30
000228 ff01      	SBRS R16,1
000229 c008      	RJMP _0x2020040
                +
00022a e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00022b ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00022c e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00022d e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00022e 940e 03a3 	CALL SUBOPT_0x7
000230 e01a      	LDI  R17,LOW(10)
000231 c022      	RJMP _0x2020041
                 _0x2020040:
                +
000232 e1e0     +LDI R30 , LOW ( 0x2710 )
000233 e2f7     +LDI R31 , HIGH ( 0x2710 )
000234 e060     +LDI R22 , BYTE3 ( 0x2710 )
000235 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
000236 940e 03a3 	CALL SUBOPT_0x7
000238 e015      	LDI  R17,LOW(5)
000239 c01a      	RJMP _0x2020041
                 _0x202003F:
00023a 35e8      	CPI  R30,LOW(0x58)
00023b f411      	BRNE _0x2020043
00023c 6008      	ORI  R16,LOW(8)
00023d c003      	RJMP _0x2020044
                 _0x2020043:
00023e 37e8      	CPI  R30,LOW(0x78)
00023f f009      	BREQ PC+2
000240 c0d7      	RJMP _0x2020077
                 _0x2020044:
000241 e1e0      	LDI  R30,LOW(16)
000242 8be8      	STD  Y+16,R30
000243 ff01      	SBRS R16,1
000244 c008      	RJMP _0x2020046
                +
000245 e0e0     +LDI R30 , LOW ( 0x10000000 )
000246 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000247 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000248 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
000249 940e 03a3 	CALL SUBOPT_0x7
00024b e018      	LDI  R17,LOW(8)
00024c c007      	RJMP _0x2020041
                 _0x2020046:
                +
00024d e0e0     +LDI R30 , LOW ( 0x1000 )
00024e e1f0     +LDI R31 , HIGH ( 0x1000 )
00024f e060     +LDI R22 , BYTE3 ( 0x1000 )
000250 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000251 940e 03a3 	CALL SUBOPT_0x7
000253 e014      	LDI  R17,LOW(4)
                 _0x2020041:
000254 ff01      	SBRS R16,1
000255 c008      	RJMP _0x2020047
000256 940e 038d 	CALL SUBOPT_0x4
000258 89ad      	LDD  R26,Y+21
000259 89be      	LDD  R27,Y+21+1
00025a 9614      	ADIW R26,4
00025b 940e 0400 	CALL __GETD1P
00025d c015      	RJMP _0x20200D3
                 _0x2020047:
00025e ff02      	SBRS R16,2
00025f c00a      	RJMP _0x2020049
000260 940e 038d 	CALL SUBOPT_0x4
000262 89ad      	LDD  R26,Y+21
000263 89be      	LDD  R27,Y+21+1
000264 9614      	ADIW R26,4
000265 940e 03fc 	CALL __GETW1P
000267 940e 03ce 	CALL __CWD1
000269 c009      	RJMP _0x20200D3
                 _0x2020049:
00026a 940e 038d 	CALL SUBOPT_0x4
00026c 89ad      	LDD  R26,Y+21
00026d 89be      	LDD  R27,Y+21+1
00026e 9614      	ADIW R26,4
00026f 940e 03fc 	CALL __GETW1P
000271 2766      	CLR  R22
000272 2777      	CLR  R23
                 _0x20200D3:
                +
000273 87ec     +STD Y + 12 , R30
000274 87fd     +STD Y + 12 + 1 , R31
000275 876e     +STD Y + 12 + 2 , R22
000276 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000277 ff02      	SBRS R16,2
000278 c013      	RJMP _0x202004B
000279 85af      	LDD  R26,Y+15
00027a 23aa      	TST  R26
00027b f45a      	BRPL _0x202004C
                +
00027c 85ec     +LDD R30 , Y + 12
00027d 85fd     +LDD R31 , Y + 12 + 1
00027e 856e     +LDD R22 , Y + 12 + 2
00027f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000280 940e 03c6 	CALL __ANEGD1
                +
000282 87ec     +STD Y + 12 , R30
000283 87fd     +STD Y + 12 + 1 , R31
000284 876e     +STD Y + 12 + 2 , R22
000285 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000286 e24d      	LDI  R20,LOW(45)
                 _0x202004C:
000287 3040      	CPI  R20,0
000288 f011      	BREQ _0x202004D
000289 5f1f      	SUBI R17,-LOW(1)
00028a c001      	RJMP _0x202004E
                 _0x202004D:
00028b 7f0b      	ANDI R16,LOW(251)
                 _0x202004E:
                 _0x202004B:
                 _0x2020039:
00028c fd00      	SBRC R16,0
00028d c011      	RJMP _0x202004F
                 _0x2020050:
00028e 1715      	CP   R17,R21
00028f f478      	BRSH _0x2020052
000290 ff07      	SBRS R16,7
000291 c008      	RJMP _0x2020053
000292 ff02      	SBRS R16,2
000293 c004      	RJMP _0x2020054
000294 7f0b      	ANDI R16,LOW(251)
000295 2f24      	MOV  R18,R20
000296 5011      	SUBI R17,LOW(1)
000297 c001      	RJMP _0x2020055
                 _0x2020054:
000298 e320      	LDI  R18,LOW(48)
                 _0x2020055:
000299 c001      	RJMP _0x2020056
                 _0x2020053:
00029a e220      	LDI  R18,LOW(32)
                 _0x2020056:
00029b 940e 0386 	CALL SUBOPT_0x3
00029d 5051      	SUBI R21,LOW(1)
00029e cfef      	RJMP _0x2020050
                 _0x2020052:
                 _0x202004F:
00029f 2f31      	MOV  R19,R17
0002a0 89e8      	LDD  R30,Y+16
0002a1 30e0      	CPI  R30,0
0002a2 f4b9      	BRNE _0x2020057
                 _0x2020058:
0002a3 3030      	CPI  R19,0
0002a4 f0a1      	BREQ _0x202005A
0002a5 ff03      	SBRS R16,3
0002a6 c006      	RJMP _0x202005B
0002a7 81ee      	LDD  R30,Y+6
0002a8 81ff      	LDD  R31,Y+6+1
0002a9 9125      	LPM  R18,Z+
0002aa 83ee      	STD  Y+6,R30
0002ab 83ff      	STD  Y+6+1,R31
0002ac c005      	RJMP _0x202005C
                 _0x202005B:
0002ad 81ae      	LDD  R26,Y+6
0002ae 81bf      	LDD  R27,Y+6+1
0002af 912d      	LD   R18,X+
0002b0 83ae      	STD  Y+6,R26
0002b1 83bf      	STD  Y+6+1,R27
                 _0x202005C:
0002b2 940e 0386 	CALL SUBOPT_0x3
0002b4 3050      	CPI  R21,0
0002b5 f009      	BREQ _0x202005D
0002b6 5051      	SUBI R21,LOW(1)
                 _0x202005D:
0002b7 5031      	SUBI R19,LOW(1)
0002b8 cfea      	RJMP _0x2020058
                 _0x202005A:
0002b9 c054      	RJMP _0x202005E
                 _0x2020057:
                 _0x2020060:
0002ba 940e 03a8 	CALL SUBOPT_0x8
0002bc 940e 03d3 	CALL __DIVD21U
0002be 2f2e      	MOV  R18,R30
0002bf 302a      	CPI  R18,10
0002c0 f030      	BRLO _0x2020062
0002c1 ff03      	SBRS R16,3
0002c2 c002      	RJMP _0x2020063
0002c3 5c29      	SUBI R18,-LOW(55)
0002c4 c001      	RJMP _0x2020064
                 _0x2020063:
0002c5 5a29      	SUBI R18,-LOW(87)
                 _0x2020064:
0002c6 c001      	RJMP _0x2020065
                 _0x2020062:
0002c7 5d20      	SUBI R18,-LOW(48)
                 _0x2020065:
0002c8 fd04      	SBRC R16,4
0002c9 c022      	RJMP _0x2020067
0002ca 3321      	CPI  R18,49
0002cb f460      	BRSH _0x2020069
                +
0002cc 85a8     +LDD R26 , Y + 8
0002cd 85b9     +LDD R27 , Y + 8 + 1
0002ce 858a     +LDD R24 , Y + 8 + 2
0002cf 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
                +
0002d0 30a1     +CPI R26 , LOW ( 0x1 )
0002d1 e0e0     +LDI R30 , HIGH ( 0x1 )
0002d2 07be     +CPC R27 , R30
0002d3 e0e0     +LDI R30 , BYTE3 ( 0x1 )
0002d4 078e     +CPC R24 , R30
0002d5 e0e0     +LDI R30 , BYTE4 ( 0x1 )
0002d6 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0002d7 f409      	BRNE _0x2020068
                 _0x2020069:
0002d8 c009      	RJMP _0x202006B
                 _0x2020068:
0002d9 1753      	CP   R21,R19
0002da f010      	BRLO _0x202006D
0002db ff00      	SBRS R16,0
0002dc c001      	RJMP _0x202006E
                 _0x202006D:
0002dd c013      	RJMP _0x202006C
                 _0x202006E:
0002de e220      	LDI  R18,LOW(32)
0002df ff07      	SBRS R16,7
0002e0 c00b      	RJMP _0x202006F
0002e1 e320      	LDI  R18,LOW(48)
                 _0x202006B:
0002e2 6100      	ORI  R16,LOW(16)
0002e3 ff02      	SBRS R16,2
0002e4 c007      	RJMP _0x2020070
0002e5 7f0b      	ANDI R16,LOW(251)
0002e6 934a      	ST   -Y,R20
0002e7 940e 0393 	CALL SUBOPT_0x5
0002e9 3050      	CPI  R21,0
0002ea f009      	BREQ _0x2020071
0002eb 5051      	SUBI R21,LOW(1)
                 _0x2020071:
                 _0x2020070:
                 _0x202006F:
                 _0x2020067:
0002ec 940e 0386 	CALL SUBOPT_0x3
0002ee 3050      	CPI  R21,0
0002ef f009      	BREQ _0x2020072
0002f0 5051      	SUBI R21,LOW(1)
                 _0x2020072:
                 _0x202006C:
0002f1 5031      	SUBI R19,LOW(1)
0002f2 940e 03a8 	CALL SUBOPT_0x8
0002f4 940e 03f8 	CALL __MODD21U
                +
0002f6 87ec     +STD Y + 12 , R30
0002f7 87fd     +STD Y + 12 + 1 , R31
0002f8 876e     +STD Y + 12 + 2 , R22
0002f9 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0002fa 89e8      	LDD  R30,Y+16
                +
0002fb 85a8     +LDD R26 , Y + 8
0002fc 85b9     +LDD R27 , Y + 8 + 1
0002fd 858a     +LDD R24 , Y + 8 + 2
0002fe 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
0002ff 27ff      	CLR  R31
000300 2766      	CLR  R22
000301 2777      	CLR  R23
000302 940e 03d3 	CALL __DIVD21U
000304 940e 03a3 	CALL SUBOPT_0x7
                +
000306 85e8     +LDD R30 , Y + 8
000307 85f9     +LDD R31 , Y + 8 + 1
000308 856a     +LDD R22 , Y + 8 + 2
000309 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00030a 940e 040b 	CALL __CPD10
00030c f009      	BREQ _0x2020061
00030d cfac      	RJMP _0x2020060
                 _0x2020061:
                 _0x202005E:
00030e ff00      	SBRS R16,0
00030f c008      	RJMP _0x2020073
                 _0x2020074:
000310 3050      	CPI  R21,0
000311 f031      	BREQ _0x2020076
000312 5051      	SUBI R21,LOW(1)
000313 e2e0      	LDI  R30,LOW(32)
000314 93ea      	ST   -Y,R30
000315 940e 0393 	CALL SUBOPT_0x5
000317 cff8      	RJMP _0x2020074
                 _0x2020076:
                 _0x2020073:
                 _0x2020077:
                 _0x2020033:
                 _0x20200D2:
000318 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000319 ce93      	RJMP _0x2020016
                 _0x2020018:
00031a 89a9      	LDD  R26,Y+17
00031b 89ba      	LDD  R27,Y+17+1
00031c 940e 03fc 	CALL __GETW1P
00031e 940e 0416 	CALL __LOADLOCR6
000320 9669      	ADIW R28,25
000321 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000322 92ff      	PUSH R15
000323 2ef8      	MOV  R15,R24
000324 9726      	SBIW R28,6
000325 940e 0411 	CALL __SAVELOCR4
000327 940e 03b1 	CALL SUBOPT_0x9
000329 9730      	SBIW R30,0
00032a f419      	BRNE _0x2020078
00032b efef      	LDI  R30,LOW(65535)
00032c efff      	LDI  R31,HIGH(65535)
00032d c023      	RJMP _0x2080001
                 _0x2020078:
00032e 01de      	MOVW R26,R28
00032f 9616      	ADIW R26,6
000330 940e 03c2 	CALL __ADDW2R15
000332 018d      	MOVW R16,R26
000333 940e 03b1 	CALL SUBOPT_0x9
000335 83ee      	STD  Y+6,R30
000336 83ff      	STD  Y+6+1,R31
000337 e0e0      	LDI  R30,LOW(0)
000338 87e8      	STD  Y+8,R30
000339 87e9      	STD  Y+8+1,R30
00033a 01de      	MOVW R26,R28
00033b 961a      	ADIW R26,10
00033c 940e 03c2 	CALL __ADDW2R15
00033e 940e 03fc 	CALL __GETW1P
000340 93fa      	ST   -Y,R31
000341 93ea      	ST   -Y,R30
000342 931a      	ST   -Y,R17
000343 930a      	ST   -Y,R16
000344 e6e1      	LDI  R30,LOW(_put_buff_G101)
000345 e0f1      	LDI  R31,HIGH(_put_buff_G101)
000346 93fa      	ST   -Y,R31
000347 93ea      	ST   -Y,R30
000348 01de      	MOVW R26,R28
000349 961a      	ADIW R26,10
00034a de56      	RCALL __print_G101
00034b 019f      	MOVW R18,R30
00034c 81ae      	LDD  R26,Y+6
00034d 81bf      	LDD  R27,Y+6+1
00034e e0e0      	LDI  R30,LOW(0)
00034f 93ec      	ST   X,R30
000350 01f9      	MOVW R30,R18
                 _0x2080001:
000351 940e 0418 	CALL __LOADLOCR4
000353 962a      	ADIW R28,10
000354 90ff      	POP  R15
000355 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000356 93ba      	ST   -Y,R27
000357 93aa      	ST   -Y,R26
000358 91a9          ld   r26,y+
000359 91b9          ld   r27,y+
00035a 27ee          clr  r30
00035b 27ff          clr  r31
                 strlen0:
00035c 916d          ld   r22,x+
00035d 2366          tst  r22
00035e f011          breq strlen1
00035f 9631          adiw r30,1
000360 cffb          rjmp strlen0
                 strlen1:
000361 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000362 93ba      	ST   -Y,R27
000363 93aa      	ST   -Y,R26
000364 27aa          clr  r26
000365 27bb          clr  r27
000366 91e9          ld   r30,y+
000367 91f9          ld   r31,y+
                 strlenf0:
000368 9005      	lpm  r0,z+
000369 2000          tst  r0
00036a f011          breq strlenf1
00036b 9611          adiw r26,1
00036c cffb          rjmp strlenf0
                 strlenf1:
00036d 01fd          movw r30,r26
00036e 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _frequency:
00016b           	.BYTE 0x10
                 _freq:
00017b           	.BYTE 0x4
                 __base_y_G100:
00017f           	.BYTE 0x4
                 __lcd_maxx:
000183           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00036f b5e7      	IN   R30,0x27
000370 2ffe      	MOV  R31,R30
000371 e0e0      	LDI  R30,0
000372 01df      	MOVW R26,R30
000373 b5e6      	IN   R30,0x26
000374 e0f0      	LDI  R31,0
000375 0fea      	ADD  R30,R26
000376 1ffb      	ADC  R31,R27
000377 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000378 940e 00e5 	CALL __lcd_write_data
00037a e0a3      	LDI  R26,LOW(3)
00037b e0b0      	LDI  R27,0
00037c 940c 03b8 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00037e e3a0      	LDI  R26,LOW(48)
00037f 940e 00d1 	CALL __lcd_write_nibble_G100
                +
000381 ec88     +LDI R24 , LOW ( 200 )
000382 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000383 9701     +SBIW R24 , 1
000384 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3:
000386 932a      	ST   -Y,R18
000387 89aa      	LDD  R26,Y+18
000388 89bb      	LDD  R27,Y+18+1
000389 89ec      	LDD  R30,Y+20
00038a 89fd      	LDD  R31,Y+20+1
00038b 9509      	ICALL
00038c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x4:
00038d 89ed      	LDD  R30,Y+21
00038e 89fe      	LDD  R31,Y+21+1
00038f 9734      	SBIW R30,4
000390 8bed      	STD  Y+21,R30
000391 8bfe      	STD  Y+21+1,R31
000392 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000393 89aa      	LDD  R26,Y+18
000394 89bb      	LDD  R27,Y+18+1
000395 89ec      	LDD  R30,Y+20
000396 89fd      	LDD  R31,Y+20+1
000397 9509      	ICALL
000398 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x6:
000399 89ad      	LDD  R26,Y+21
00039a 89be      	LDD  R27,Y+21+1
00039b 9614      	ADIW R26,4
00039c 940e 03fc 	CALL __GETW1P
00039e 83ee      	STD  Y+6,R30
00039f 83ff      	STD  Y+6+1,R31
0003a0 81ae      	LDD  R26,Y+6
0003a1 81bf      	LDD  R27,Y+6+1
0003a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
                +
0003a3 87e8     +STD Y + 8 , R30
0003a4 87f9     +STD Y + 8 + 1 , R31
0003a5 876a     +STD Y + 8 + 2 , R22
0003a6 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
0003a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
                +
0003a8 85e8     +LDD R30 , Y + 8
0003a9 85f9     +LDD R31 , Y + 8 + 1
0003aa 856a     +LDD R22 , Y + 8 + 2
0003ab 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
                +
0003ac 85ac     +LDD R26 , Y + 12
0003ad 85bd     +LDD R27 , Y + 12 + 1
0003ae 858e     +LDD R24 , Y + 12 + 2
0003af 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0003b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
0003b1 01de      	MOVW R26,R28
0003b2 961c      	ADIW R26,12
0003b3 940e 03c2 	CALL __ADDW2R15
0003b5 940e 03fc 	CALL __GETW1P
0003b7 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003b8 9610      	adiw r26,0
0003b9 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003ba ed80     +LDI R24 , LOW ( 0x7D0 )
0003bb e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003bc 9701     +SBIW R24 , 1
0003bd f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003be 95a8      	wdr
0003bf 9711      	sbiw r26,1
0003c0 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003c1 9508      	ret
                 
                 __ADDW2R15:
0003c2 2400      	CLR  R0
0003c3 0daf      	ADD  R26,R15
0003c4 1db0      	ADC  R27,R0
0003c5 9508      	RET
                 
                 __ANEGD1:
0003c6 95f0      	COM  R31
0003c7 9560      	COM  R22
0003c8 9570      	COM  R23
0003c9 95e1      	NEG  R30
0003ca 4fff      	SBCI R31,-1
0003cb 4f6f      	SBCI R22,-1
0003cc 4f7f      	SBCI R23,-1
0003cd 9508      	RET
                 
                 __CWD1:
0003ce 2f6f      	MOV  R22,R31
0003cf 0f66      	ADD  R22,R22
0003d0 0b66      	SBC  R22,R22
0003d1 2f76      	MOV  R23,R22
0003d2 9508      	RET
                 
                 __DIVD21U:
0003d3 933f      	PUSH R19
0003d4 934f      	PUSH R20
0003d5 935f      	PUSH R21
0003d6 2400      	CLR  R0
0003d7 2411      	CLR  R1
0003d8 2744      	CLR  R20
0003d9 2755      	CLR  R21
0003da e230      	LDI  R19,32
                 __DIVD21U1:
0003db 0faa      	LSL  R26
0003dc 1fbb      	ROL  R27
0003dd 1f88      	ROL  R24
0003de 1f99      	ROL  R25
0003df 1c00      	ROL  R0
0003e0 1c11      	ROL  R1
0003e1 1f44      	ROL  R20
0003e2 1f55      	ROL  R21
0003e3 1a0e      	SUB  R0,R30
0003e4 0a1f      	SBC  R1,R31
0003e5 0b46      	SBC  R20,R22
0003e6 0b57      	SBC  R21,R23
0003e7 f428      	BRCC __DIVD21U2
0003e8 0e0e      	ADD  R0,R30
0003e9 1e1f      	ADC  R1,R31
0003ea 1f46      	ADC  R20,R22
0003eb 1f57      	ADC  R21,R23
0003ec c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0003ed 60a1      	SBR  R26,1
                 __DIVD21U3:
0003ee 953a      	DEC  R19
0003ef f759      	BRNE __DIVD21U1
0003f0 01fd      	MOVW R30,R26
0003f1 01bc      	MOVW R22,R24
0003f2 01d0      	MOVW R26,R0
0003f3 01ca      	MOVW R24,R20
0003f4 915f      	POP  R21
0003f5 914f      	POP  R20
0003f6 913f      	POP  R19
0003f7 9508      	RET
                 
                 __MODD21U:
0003f8 dfda      	RCALL __DIVD21U
0003f9 01fd      	MOVW R30,R26
0003fa 01bc      	MOVW R22,R24
0003fb 9508      	RET
                 
                 __GETW1P:
0003fc 91ed      	LD   R30,X+
0003fd 91fc      	LD   R31,X
0003fe 9711      	SBIW R26,1
0003ff 9508      	RET
                 
                 __GETD1P:
000400 91ed      	LD   R30,X+
000401 91fd      	LD   R31,X+
000402 916d      	LD   R22,X+
000403 917c      	LD   R23,X
000404 9713      	SBIW R26,3
000405 9508      	RET
                 
                 __PUTPARD1:
000406 937a      	ST   -Y,R23
000407 936a      	ST   -Y,R22
000408 93fa      	ST   -Y,R31
000409 93ea      	ST   -Y,R30
00040a 9508      	RET
                 
                 __CPD10:
00040b 9730      	SBIW R30,0
00040c 4060      	SBCI R22,0
00040d 4070      	SBCI R23,0
00040e 9508      	RET
                 
                 __SAVELOCR6:
00040f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000410 934a      	ST   -Y,R20
                 __SAVELOCR4:
000411 933a      	ST   -Y,R19
                 __SAVELOCR3:
000412 932a      	ST   -Y,R18
                 __SAVELOCR2:
000413 931a      	ST   -Y,R17
000414 930a      	ST   -Y,R16
000415 9508      	RET
                 
                 __LOADLOCR6:
000416 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000417 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000418 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000419 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00041a 8119      	LDD  R17,Y+1
00041b 8108      	LD   R16,Y
00041c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  14 r1 :   5 r2 :   0 r3 :   0 r4 :   3 r5 :   2 r6 :   1 r7 :   0 
r8 :   3 r9 :   1 r10:   1 r11:   0 r12:   4 r13:   4 r14:   0 r15:   4 
r16:  37 r17:  27 r18:  30 r19:  12 r20:  16 r21:  23 r22:  34 r23:  23 
r24:  32 r25:  11 r26: 107 r27:  42 r28:  14 r29:   1 r30: 207 r31:  64 
x  :  27 y  : 181 z  :  13 
Registers used: 30 out of 35 (85.7%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   6 
adiw  :  25 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   1 brne  :  34 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  66 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  18 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   3 
cp    :   4 cpc   :   5 cpi   :  37 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   7 inc   :   2 jmp   :  23 ld    :  29 ldd   :  88 ldi   : 127 
lds   :   3 lpm   :  11 lsl   :   1 lsr   :   0 mov   :  20 movw  :  26 
mul   :   1 muls  :   0 mulsu :   0 neg   :   1 nop   :   0 or    :   1 
ori   :   7 out   :  21 pop   :   4 push  :   4 rcall :  18 ret   :  30 
reti  :   0 rjmp  :  72 rol   :   7 ror   :   0 sbc   :   5 sbci  :   6 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  19 sbr   :   1 sbrc  :   2 
sbrs  :  16 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  58 std   :  36 sts   :   7 sub   :   2 subi  :  16 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 58 out of 116 (50.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00083a   2066     40   2106   16384  12.9%
[.dseg] 0x000060 0x000184      0     36     36    1024   3.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 11 warnings
